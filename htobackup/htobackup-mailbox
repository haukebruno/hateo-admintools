#!/bin/bash

#Define variables, some has default values

USER=""
PASSWORD=""
DOMAIN=""
MAILROOTDIR="/home/vmail"
TRANSPORT="ftp"
REMOTE=""
ENCRYPTKEY=""
DATE=$(date +%Y%m%d)
DELETEDATE=$(date --date="7 days ago" +%Y%m%d)
REMOVE="false"

#Usage

function help() {

  echo -e "\r\nUsage:
  -D, --domain DOMAINNAME\t\t\t Specific domain (all)
  -k, --encryption-passphrase YOURPASSPHRASE\t Set passphrase for encrypted files
  -m, --mailroot MAILROOTDIR\t\t Root directory for mail (/home/vmail)
  -p, --password REMOTEPASSWORD\t\t\t Password for remote user
  -r, --remote REMOTEHOST\t\t\t IP or name from remote host
  -R, --remove\t\t\t\t\t Remove backups from local directory
  -t, --transfer [ftp,local]\t\t\t\t Transfer type (ftp)
  -u, --user REMOTEUSER\t\t\t\t Remote username
  -h, --help\t\t\t\t\t Print this help
  "
  exit 0

}

#Error handling

function missing_arg() {

  echo -e "$0: ERROR: Missing argument for $1\r\n"
  exit 1

}

#Main function

function backup_completemailroot() {

  for dir in $(ls $MAILROOTDIR/)
  do

    DOM=$dir
    backup_mailroot $dir $DOM

  done

}

function backup_mailroot() {

  for subdir in $(ls $MAILROOTDIR/$DOMAIN/$dir)
  do

    if [ -z $ENCRYPTKEY ]
    then

      ENCRYPTKEY=$(pwgen -s 12 1)

    fi

    if [ -z $DOMAIN ]
    then
    
      FILENAME="${subdir}@${DOM}-${DATE}.des3"
      OLDFILENAME="${subdir}@${DOM}-${DELETEDATE}.des3"

      tar -cjf - -p --atime-preserve -C $MAILROOTDIR $DOM/$subdir |openssl des3 -salt -k $ENCRYPTKEY |dd of=/tmp/$FILENAME

    else

      FILENAME="${subdir}@${DOMAIN}-${DATE}.des3"
      OLDFILENAME="${subdir}@${DOMAIN}-${DELETEDATE}.des3"

      tar -cjf - -p --atime-preserve -C $MAILROOTDIR $DOMAIN/$subdir |openssl des3 -salt -k $ENCRYPTKEY |dd of=/tmp/$FILENAME

    fi

if [ $TRANSPORT == "ftp" ]
then
    ftp -inv $REMOTE << EOF
    user $USER $PASSWORD
    delete mailboxen/$OLDFILENAME
    put /tmp/$FILENAME mailboxen/$FILENAME
    bye
EOF
elif [ $TRANSPORT == "local" ]
then
    cp /tmp/$FILENAME /mnt/backup/users/haukebruno/mailboxen/
fi  
    echo -e $FILENAME "\t" $ENCRYPTKEY > /root/backups/mailboxen/$FILENAME.passwd
    chmod 400 /root/backups/mailboxen/$FILENAME.passwd

    if [ $REMOVE = "true" ]
    then
    
      rm /tmp/$FILENAME

    fi
    

  done

}

#Command line options

if [[ "$#" -eq 0 ]] || [[ "$#" -eq 1 && "$1" == "-h" || "$1" == "--help" ]] 
then

  help

fi

while [ "$#" -gt 0 ]
do

  case $1 in

    -m|--mailroot)
      if [[ "$#" -ge 2 && "$2" != -* ]]
      then
      
        MAILROOTDIR=$2
        shift 2

      else

	missing_arg $1

      fi
      ;;

    -D|--domain)
      if [[ "$#" -ge 2 && "$2" != -* ]]
      then

        DOMAIN=$2
        shift 2

      else

        missing_arg $1

      fi
      ;;

    -t|--transfer)
      if [[ "$#" -ge 2 && "$2" != -* ]]
      then
        TRANSPORT=$2
        shift 2
      else
        missing_arg $1
      fi
      ;;

    -u|--user)
      if [[ "$#" -ge 2 && "$2" != -* ]]
      then
      
        USER=$2
        shift 2

      else

        missing_arg $1

      fi
      ;;

    -p|--password)
      if [[ "$#" -ge 2 && "$2" != -* ]]
      then

        PASSWORD=$2
        shift 2

      else

        missing_arg $1

      fi
      ;;

    -r|--remote)
      if [[ "$#" -ge 2 && "$2" != -* ]]
      then

        REMOTE=$2
        shift 2

      else

        missing_arg $1

      fi
      ;;

    -R|--remove)
      REMOVE="true"
      shift 1
      ;;

    -k|--encryption-passphrase)
      if [[ "$#" -ge 2 && "$2" != -* ]]
      then

        ENCRYPTKEY=$2
        shift 2

      else

        missing_arg $1

      fi
      ;;

  esac

done

if [ -z $DOMAIN ]
then

  backup_completemailroot

else

  backup_mailroot

fi
